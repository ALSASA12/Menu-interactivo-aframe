
<a-entity id="puerta" geometry="primitive: box; width: 1; height: 2; depth: 0.1" material="color: #808080" position="0 1 3.95"></a-entity>
//   const plane = this.el.querySelector('a-plane');
    //   const options = this.el.querySelectorAll('a-text');
    //   const cursor = this.el.querySelector('a-cursor');
  
    //   let selectedOption = null;
  
    //   cursor.addEventListener('click', (event) => {
    //     const clickedOption = event.detail.target;
    //     if (clickedOption && options.includes(clickedOption)) {
    //       if (selectedOption) {
    //         selectedOption.setAttribute('material', 'color: #ffffff');
    //       }
    //       selectedOption = clickedOption;
    //       selectedOption.setAttribute('material', 'color: #000000');
  
    //       // Trigger an event to communicate the selected option
    //       this.el.emit('option-selected', { selected: selectedOption.getAttribute('value') });
    //     }
    //   });
  
    //   // Set initial option
    //   selectedOption = options[0];
    //   selectedOption.setAttribute('material', 'color: #000000');

    function spawnObject() {
        var spawnedObjects = document.getElementById('spawnedObjects');
        var newObject = document.createElement('a-box');
        newObject.setAttribute('position', '0 1.5 -3');
        newObject.setAttribute('color', 'black');
        newObject.setAttribute('grabbable', '');
        spawnedObjects.appendChild(newObject);
      }
  
      // Event listener para el bot√≥n de spawnear objetos
      document.querySelector('[spawn-button]').addEventListener('click', spawnObject);






//       <a-entity id="gestureDetector" 
//       event-set__pinchstarted="_event: pinchstarted; _target: #cajita"
//       event-set__pinchended="_event: pinchended; _target: #cajita"
//       event-set__pinchmoved="_event: pinchmoved; _target: #cajita"
//       event-set__dragstarted="_event: dragstarted; _target: #cajita"
//       event-set__dragended="_event: dragended; _target: #cajita"
//       event-set__dragging="_event: dragging; _target: #cajita">
//       </a-entity>

// <a-entity id="menu"  a-follow="leftHand" position="0 0.05 0.08" rotation="-85 0 0" normal-scale="0.2 0.2 0.2">
//         <a-plane width="0.5" height="0.5" color="#FFFFFF"></a-plane>
//         <a-text id="Option 1" value="Option 1"  width="0.5" height="0.5" position="0 0.1 0" align="center" color="#000000" ></a-text>
//         <a-text id="Option 2" value="Option 2"  width="0.5" height="0.5"position="0 -0.1 0" align="center"color="#000000"></a-text>
//       <a-cursor></a-cursor>
//       </a-entity>

// <!--puerta-->
// <!-- <a-entity id="puerta" geometry="primitive: box; width: 1; height: 2; depth: 0.1" material="color: #808080" ></a-entity> -->

{/* <a-mixin id="all-interactions"
    hoverable grabbable stretchable draggable
    event-set__hoveron="_event: hover-start; material.opacity: 0.7; transparent: true"
    event-set__hoveroff="_event: hover-end; material.opacity: 1; transparent: false"
    dynamic-body
    ></a-mixin>
    <a-mixin id="grab-move"
        hoverable grabbable draggable
        event-set__hoveron="_event: hover-start; material.opacity: 0.7; transparent: true"
        event-set__hoveroff="_event: hover-end; material.opacity: 1; transparent: false"
        dynamic-body="shape: box; sphereRadius: 0.1"
    ></a-mixin>
    <a-mixin id="physics-hands"
        physics-collider phase-shift
        collision-filter="collisionForces: false"
        static-body="shape: sphere; sphereRadius: 0.02"
        super-hands="colliderEvent: collisions;
                    colliderEventProperty: els;
                    colliderEndEvent: collisions;
                    colliderEndEventProperty: clearedEls;"
    ></a-mixin> */}
